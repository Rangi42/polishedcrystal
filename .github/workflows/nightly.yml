name: "Nightly Build"

on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/**'
#  schedule:
#    - cron: '0 5 * * *'

jobs:
  build:
    name: "Nightly"
    uses: Rangi42/polishedcrystal/.github/workflows/build.yml@master
  release:
    name: "Nightly / Release"
    runs-on: ubuntu-latest
    needs: build
    steps:
      # INSTALL DEPENDENCIES
      - id: apt-get-depends
        name: "Install dependencies"
        run: |
          sudo apt-get install bison gcc git make python -y;
      
      # CHECKOUT REPOSITORY
      - id: checkout-polishedcrystal
        name: "Checkout Rangi42/polishedcrystal"
        uses: actions/checkout@master
        
      # SET ENVIRONMENT VARIABLE
      - id: set-env-var
        name: "Set environment variable"
        run: |
          echo "SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_ENV
          
      # DOWNLOAD BUILD ARTIFACTS
      - id: download-polishedcrystal
        name: "Download polishedcrystal"
        uses: actions/download-artifact@v3.0.0
        with:
          name: "polishedcrystal"
      - id: download-polishedcrystal-faithful
        name: "Download polishedcrystal-faithful"
        uses: actions/download-artifact@v3.0.0
        with:
          name: "polishedcrystal-faithful"
      - id: download-polisheddebug
        name: "Download polisheddebug"
        uses: actions/download-artifact@v3.0.0
        with:
          name: "polisheddebug"
      - id: download-polisheddebug-faithful
        name: "Download polisheddebug-faithful"
        uses: actions/download-artifact@v3.0.0
        with:
          name: "polisheddebug-faithful"
      - id: download-polishedcrystal-savepatch
        name: "Download polishedcrystal-savepatch"
        uses: actions/download-artifact@v3.0.0
        with:
          name: "polishedcrystal-savepatch"
      
      # CREATE NEW RELEASE
      - name: Delete old release
        id: delete_release
        uses: jagger27/delete-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v3.0.0-beta-nightly
      - name: Advance nightly tag to master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pushd polishedcrystal
          git tag v3.0.0-beta-nightly -f
          git push --tags -f "https://Rangi42:$GITHUB_TOKEN@github.com/Rangi42/polishedcrystal.git"
          popd
      - name: Create new release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v3.0.0-beta-nightly
          release_name: 3.0.0 beta nightly
          body: |
            This is the current Polished Crystal 3.0.0 *beta* release. The assets all have an 8-character "commit hash" at the end to identify the exact code they're built from.

            The **.gbc** assets are ROMs. If you just want to play the game, download one (regular or `-faithful`) and load it in [BGB](https://bgb.bircd.org/), [mGBA](https://mgba.io/), [Gambatte](https://github.com/sinamas/gambatte), or another accurate Game Boy Color emulator. (***Do not use VBA*** or VBA-M.)

            The **.sym** assets are "symbol files". They're useful for debugging, or for [discovering cheat codes](https://github.com/pret/pokecrystal/wiki/Discovering-GameShark-cheat-codes), although cheats are *not* officially supported and may cause bugs or crashes. (Do ***not*** ask the developers for cheat codes.)

            The **.bsp** asset is a [BSP](https://github.com/aaaaaa123456789/bsp) save file patch in case you need to upgrade a save file from an older 3.0.0 beta build, using a patcher like the one for [Pok√©mon Prism](http://pokemonprism.com/patcher.html).

            The **polisheddebug** assets are ROMs and symbol files with extra features to help debug the game. Do ***not*** download these to just play with; use them to help the developers diagnose and fix bugs, or create new features.
          draft: false
          prerelease: true
          
      # UPLOAD ASSETS
      - name: Upload ROM
        id: upload
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./polishedcrystal/polishedcrystal-3.0.0-beta-${{ env.SHORT_SHA }}.gbc
          asset_name: polishedcrystal-3.0.0-beta-${{ env.SHORT_SHA }}.gbc
          asset_content_type: application/octet-stream
      - name: Upload SYM
        id: upload-sym
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./polishedcrystal/polishedcrystal-3.0.0-beta-${{ env.SHORT_SHA }}.sym
          asset_name: polishedcrystal-3.0.0-beta-${{ env.SHORT_SHA }}.sym
          asset_content_type: text/plain
          
      - name: Upload faithful ROM
        id: upload-faithful
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./polishedcrystal-faithful/polishedcrystal-faithful-3.0.0-beta-${{ env.SHORT_SHA }}.gbc
          asset_name: polishedcrystal-faithful-3.0.0-beta-${{ env.SHORT_SHA }}.gbc
          asset_content_type: application/octet-stream
      - name: Upload faithful SYM
        id: upload-faithful-sym
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./polishedcrystal-faithful/polishedcrystal-faithful-3.0.0-beta-${{ env.SHORT_SHA }}.sym
          asset_name: polishedcrystal-faithful-3.0.0-beta-${{ env.SHORT_SHA }}.sym
          asset_content_type: text/plain
          
      - name: Upload debug ROM
        id: upload-debug
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./polisheddebug/polisheddebug-3.0.0-beta-${{ env.SHORT_SHA }}.gbc
          asset_name: polisheddebug-3.0.0-beta-${{ env.SHORT_SHA }}.gbc
          asset_content_type: application/octet-stream
      - name: Upload debug SYM
        id: upload-debug-sym
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./polisheddebug/polisheddebug-3.0.0-beta-${{ env.SHORT_SHA }}.sym
          asset_name: polisheddebug-3.0.0-beta-${{ env.SHORT_SHA }}.sym
          asset_content_type: text/plain
          
      - name: Upload faithful debug ROM
        id: upload-faithful-debug
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./polisheddebug-faithful/polisheddebug-faithful-3.0.0-beta-${{ env.SHORT_SHA }}.gbc
          asset_name: polisheddebug-faithful-3.0.0-beta-${{ env.SHORT_SHA }}.gbc
          asset_content_type: application/octet-stream
      - name: Upload faithful debug SYM
        id: upload-faithful-debug-sym
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./polisheddebug-faithful/polisheddebug-faithful-3.0.0-beta-${{ env.SHORT_SHA }}.sym
          asset_name: polisheddebug-faithful-3.0.0-beta-${{ env.SHORT_SHA }}.sym
          asset_content_type: text/plain
          
      - name: Upload BSP
        id: upload-bsp
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./polishedcrystal-savepatch/polishedcrystal-savepatch-3.0.0-beta-${{ env.SHORT_SHA }}.bsp
          asset_name: polishedcrystal-savepatch-3.0.0-beta-${{ env.SHORT_SHA }}.bsp
          asset_content_type: application/octet-stream
